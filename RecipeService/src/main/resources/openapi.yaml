openapi: 3.0.3
info:
  title: Fridge Recipes API
  version: 1.1.0
  description: |
    API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤, —Å–ø–∏—Å–∫–∞ ¬´–õ—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã¬ª,
    –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–º–æ—â—å—é JWT.
servers:
  - url: /api

# üîí –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ JWT –¥–ª—è –≤—Å–µ—Ö –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
security:
  - bearerAuth: []

paths:
  ##########################
  # AUTH
  ##########################
  /auth/register:
    post:
      summary: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      tags: [Auth]
      security: []  # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterInput'
      responses:
        '201':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '400':
          description: –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
  /auth/login:
    post:
      summary: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ JWT
      tags: [Auth]
      security: []  # –ª–æ–≥–∏–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
      responses:
        '200':
          description: –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '401':
          description: –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å

  ##########################
  # PRODUCTS
  ##########################
  /products:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ
      tags: [Products]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: –ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{productId}:
    parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
    put:
      summary: –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      summary: –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
      tags: [Products]
      responses:
        '204':
          description: –ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª—ë–Ω

  ##########################
  # RECIPES
  ##########################
  /recipes:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤
      tags: [Recipes]
      parameters:
        - name: category
          in: query
          description: –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          required: false
          schema:
            type: string
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      summary: –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç
      tags: [Recipes]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeInput'
      responses:
        '201':
          description: –†–µ—Ü–µ–ø—Ç —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
  /recipes/search:
    get:
      summary: –ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤
      tags: [Recipes]
      responses:
        '200':
          description: –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /recipes/{recipeId}/favorites:
    parameters:
      - name: recipeId
        in: path
        required: true
        schema:
          type: integer
    post:
      summary: –î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
      tags: [Favorites]
      responses:
        '201':
          description: –†–µ—Ü–µ–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    delete:
      summary: –£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
      tags: [Favorites]
      responses:
        '204':
          description: –†–µ—Ü–µ–ø—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  /favorites:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      tags: [Favorites]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ################# AUTH #################
    UserRegisterInput:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        name:
          type: string
        phone_number:
          type: string
      required: [email, password]
    UserLoginInput:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required: [email, password]
    AuthToken:
      type: object
      properties:
        token:
          type: string
      required: [token]

    ################# DOMAIN #################
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        quantity:
          type: number
          format: float
        unit:
          type: string
      required: [id, name]
    ProductInput:
      type: object
      properties:
        name:
          type: string
        quantity:
          type: number
          format: float
        unit:
          type: string
      required: [name]
    Ingredient:
      type: object
      properties:
        productName:
          type: string
        quantity:
          type: number
          format: float
        unit:
          type: string
      required: [productName, quantity]
    Recipe:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        category:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
      required: [id, title, ingredients]
    RecipeInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
      required: [title, ingredients]
